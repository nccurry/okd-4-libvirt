#!/usr/bin/env ansible-playbook
---
- name: Administer OpenShift / OKD
  hosts: "{{ libvirt_host }}"
  gather_facts: false
  vars_files:
  - "{{ playbook_dir }}/../defaults/main.yml"
  tasks:
  - name: Install/configure prerequisites
    tags:
    - install_cli_tools
    import_role:
      name: install_cli_tools

  - name: Create libvirt network
    virt_net:
      command: define
      autostart: yes
      name: "{{ cluster_name }}.{{ network.domain_suffix }}"
      xml: |
        <network>
          <name>{{ cluster_name }}.{{ network.domain_suffix }}</name>
          <forward mode='nat'>
            <nat>
              <port start='1024' end='65535'/>
            </nat>
          </forward>
          <dns>
            <forwarder addr="{{ network.upstream_dns_1 }}"/>
            <forwarder addr="{{ network.upstream_dns_2 }}"/>
            <forwarder addr="{{ utility_vms[0].ip }}" domain='{{ network.domain_suffix }}'/>
          </dns>
          <bridge name='{{ network.bridge_name }}' stp='on' delay='0'/>
          <mac address='{{ network.mac }}'/>
          <domain name='{{ network.domain_suffix }}' localOnly='no'/>
          <ip address='{{ network.gateway }}' netmask='{{ network.netmask }}'>
            <dhcp>
              <range start='{{ network.dhcp_start }}' end='{{ network.dhcp_end }}'/>
              {% for vm in cluster_vms %}
              <host mac='{{ vm.mac }}' name='{{ vm.name }}' ip='{{ vm.ip }}'/>
              {% endfor %}
            </dhcp>
          </ip>
        </network>

  - name: Start libvirt network
    virt_net:
      autostart: yes
      state: active
      name: "{{ cluster_name }}.{{ network.domain_suffix }}"

  - name: Create ssh directory
    file:
      state: directory
      path: "{{ lookup('env', 'HOME') }}/.ssh"

  - name: Generate ssh keypair
    openssh_keypair:
      path: "{{ lookup('env', 'HOME') }}/.ssh/id_rsa"
      mode: 0400
    register: ssh_key

  - name: Generate ignition files
    import_role:
      name: generate_ignition_files

  - name: Deploy virtual machine
    vars:
      coreos_type: "{{ install_type == 'okd' | ternary('fedora', 'redhat') }}"
      ignition_path: "{{ ignition_path }}/{{ item.type }}.ign"
      vm_name: "{{ item.name }}"
      vm_mac: "{{ item.mac }}"
      vm_cpus: "{{ item.cpus }}"
      vm_memory: "{{ item.memory }}"
      vm_disk_size: "{{ item.disk_size }}"
      vm_network_name: "{{ cluster_name }}.{{ network.domain_suffix }}"
      vm_network_bridge: "{{ network.bridge_name }}"
    import_role:
      name: libvirt_coreos_vm
    loop: "{{ cluster_vms }}"

  - name: Create entries in /etc/hosts
    become: true
    blockinfile:
      marker: "<!-- {mark} ANSIBLE MANAGED BLOCK {{ cluster_name }} -->"
      path: /etc/hosts
      block: |
        {{ utility_vms[0].ip }} api.{{ cluster_name }}.{{ network.domain_suffix }}
        {{ utility_vms[0].ip }} oauth-openshift.apps.{{ cluster_name }}.{{ network.domain_suffix }}
        {{ utility_vms[0].ip }} console-openshift-console.apps.{{ cluster_name }}.{{ network.domain_suffix }}
        {{ utility_vms[0].ip }} downloads-openshift-console.apps.{{ cluster_name }}.{{ network.domain_suffix }}
        {{ utility_vms[0].ip }} default-route-openshift-image-registry.apps.{{ cluster_name }}.{{ network.domain_suffix }}
        {{ utility_vms[0].ip }} alertmanager-main-openshift-monitoring.apps.{{ cluster_name }}.{{ network.domain_suffix }}
        {{ utility_vms[0].ip }} grafana-openshift-monitoring.apps.ocp.{{ cluster_name }}.{{ network.domain_suffix }}
        {{ utility_vms[0].ip }} prometheus-k8s-openshift-monitoring.{{ cluster_name }}.{{ network.domain_suffix }}